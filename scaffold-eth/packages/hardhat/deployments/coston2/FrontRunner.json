{
  "address": "0x276C6D6870eE4F0cBDff139D0c6615C2B02A0A9E",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_multiDex",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "completeFrontRun",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        }
      ],
      "name": "manipulatePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "multiDex",
      "outputs": [
        {
          "internalType": "contract IMultiDEX",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenA",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenB",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
  "receipt": {
    "to": null,
    "from": "0x95aCEce779AcDA202dF28e58401A493eAe0f76b8",
    "contractAddress": "0x276C6D6870eE4F0cBDff139D0c6615C2B02A0A9E",
    "transactionIndex": 0,
    "gasUsed": "436140",
    "logsBloom": "0x
    "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a",
    "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6684469,
        "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x00000000000000000000000098b8e9b5830f04fe3b8d56a2f8455e337037ba280000000000000000000000000000000000000000000000000000000000004231",
        "logIndex": 0,
        "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6684469,
        "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x0000000000000000000000004f52e61907b0ed9f26b88f16b2510a4ca524d6d00000000000000000000000000000000000000000000000000000000000003099",
        "logIndex": 1,
        "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6684469,
        "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x000000000000000000000000d2a1bb23eb350814a30dd6f9de78bb2c8fdd9f1d00000000000000000000000000000000000000000000000000000000000093ec",
        "logIndex": 2,
        "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6684469,
        "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x0000000000000000000000006892bdbbb14e1c9bd46bf31e7bac94d038fc82a6000000000000000000000000000000000000000000000000000000000000422d",
        "logIndex": 3,
        "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6684469,
        "transactionHash": "0xb4297416cf25381150cc4e790e4d404d4ca63336eaef5ca056f565aef8e6332a",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x000000000000000000000000bd33bdff04c357f7fc019e72d0504c24cf4aa0100000000000000000000000000000000000000000000000000000000000008f11",
        "logIndex": 4,
        "blockHash": "0xf5e74c5063b7245d6b6cad57697e1b8c29fe5c83e02cd239b9b9a80368291c2a"
      }
    ],
    "blockNumber": 6684469,
    "cumulativeGasUsed": "436140",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9B9B4cCCBA78109A30c771DeD0eb9ACcc798E56b",
    "0xc26D2E1af55447D9ABfA59AE97f13Feca6eACBab",
    "0x133F17ADA0999E0504361Bfff78611f9ceAcC257"
  ],
  "numDeployments": 2,
  "solcInputHash": "1b682a6e8476068e7065ee199f3dc5b9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_multiDex\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"completeFrontRun\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"}],\"name\":\"manipulatePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"multiDex\",\"outputs\":[{\"internalType\":\"contract IMultiDEX\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FrontRunner.sol\":\"FrontRunner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"contracts/FrontRunner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMultiDEX {\\n    function swapTokenToToken(\\n        address _tokenIn,\\n        address _tokenOut,\\n        uint256 _tokensSold,\\n        uint256 _expectedPriceUSD\\n    ) external;\\n}\\n\\ncontract FrontRunner {\\n    IMultiDEX public multiDex;\\n    IERC20 public tokenA;\\n    IERC20 public tokenB;\\n\\n    constructor(address _multiDex, address _tokenA, address _tokenB) {\\n        multiDex = IMultiDEX(_multiDex);\\n        tokenA = IERC20(_tokenA);\\n        tokenB = IERC20(_tokenB);\\n    }\\n\\n    function manipulatePrice(uint256 _amountA) public {\\n        // 1. Swap token A for token B to manipulate the price\\n        tokenA.transferFrom(msg.sender, address(this), _amountA);\\n        tokenA.approve(address(multiDex), _amountA);\\n        multiDex.swapTokenToToken(address(tokenA), address(tokenB), _amountA, 0);\\n    }\\n\\n    function completeFrontRun() public {\\n        // 2. Perform the normal swap from token A to token B\\n        uint256 amountA = tokenA.balanceOf(address(this));\\n        tokenA.approve(address(multiDex), amountA);\\n        multiDex.swapTokenToToken(address(tokenA), address(tokenB), amountA, 0);\\n\\n        // 3. Swap back token B to token A to revert the price\\n        uint256 amountB = tokenB.balanceOf(address(this));\\n        tokenB.approve(address(multiDex), amountB);\\n        multiDex.swapTokenToToken(address(tokenB), address(tokenA), amountB, 0);\\n    }\\n}\\n\",\"keccak256\":\"0x8faa54baa7b3d6a0a01e2f93e646c3abc18794a3e56965ab5b2007c47e9cadce\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161068538038061068583398101604081905261002f9161008d565b600080546001600160a01b039485166001600160a01b0319918216179091556001805493851693821693909317909255600280549190931691161790556100d0565b80516001600160a01b038116811461008857600080fd5b919050565b6000806000606084860312156100a257600080fd5b6100ab84610071565b92506100b960208501610071565b91506100c760408501610071565b90509250925092565b6105a6806100df6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630fc63d101461005c57806359b118b01461008b5780635f64b55b146100a05780638fdae009146100b3578063fd12c8e8146100c6575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e6100993660046104ec565b6100ce565b005b60025461006f906001600160a01b031681565b60005461006f906001600160a01b031681565b61009e610236565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610505565b5060015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610505565b5060008054600154600254604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc19461020194811693169187919060040161052e565b600060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a39190610557565b60015460005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190610505565b5060008054600154600254604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc19461035c94811693169187919060040161052e565b600060405180830381600087803b15801561037657600080fd5b505af115801561038a573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610557565b60025460005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610505565b5060008054600254600154604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc1946104b694811693169187919060040161052e565b600060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050505050565b6000602082840312156104fe57600080fd5b5035919050565b60006020828403121561051757600080fd5b8151801515811461052757600080fd5b9392505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60006020828403121561056957600080fd5b505191905056fea2646970667358221220af41280f9ba47d68aef1fa8a65efefa6e507201fe9cc6caf08c04a4b97dd0b4564736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80630fc63d101461005c57806359b118b01461008b5780635f64b55b146100a05780638fdae009146100b3578063fd12c8e8146100c6575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009e6100993660046104ec565b6100ce565b005b60025461006f906001600160a01b031681565b60005461006f906001600160a01b031681565b61009e610236565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610125573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101499190610505565b5060015460005460405163095ea7b360e01b81526001600160a01b0391821660048201526024810184905291169063095ea7b3906044016020604051808303816000875af115801561019f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c39190610505565b5060008054600154600254604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc19461020194811693169187919060040161052e565b600060405180830381600087803b15801561021b57600080fd5b505af115801561022f573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a39190610557565b60015460005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af11580156102fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031e9190610505565b5060008054600154600254604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc19461035c94811693169187919060040161052e565b600060405180830381600087803b15801561037657600080fd5b505af115801561038a573d6000803e3d6000fd5b50506002546040516370a0823160e01b8152306004820152600093506001600160a01b0390911691506370a0823190602401602060405180830381865afa1580156103d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103fd9190610557565b60025460005460405163095ea7b360e01b81526001600160a01b03918216600482015260248101849052929350169063095ea7b3906044016020604051808303816000875af1158015610454573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104789190610505565b5060008054600254600154604051633ee2afc160e01b81526001600160a01b0393841694633ee2afc1946104b694811693169187919060040161052e565b600060405180830381600087803b1580156104d057600080fd5b505af11580156104e4573d6000803e3d6000fd5b505050505050565b6000602082840312156104fe57600080fd5b5035919050565b60006020828403121561051757600080fd5b8151801515811461052757600080fd5b9392505050565b6001600160a01b0394851681529290931660208301526040820152606081019190915260800190565b60006020828403121561056957600080fd5b505191905056fea2646970667358221220af41280f9ba47d68aef1fa8a65efefa6e507201fe9cc6caf08c04a4b97dd0b4564736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 95,
        "contract": "contracts/FrontRunner.sol:FrontRunner",
        "label": "multiDex",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IMultiDEX)92"
      },
      {
        "astId": 98,
        "contract": "contracts/FrontRunner.sol:FrontRunner",
        "label": "tokenA",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)77"
      },
      {
        "astId": 101,
        "contract": "contracts/FrontRunner.sol:FrontRunner",
        "label": "tokenB",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)77"
      }
    ],
    "types": {
      "t_contract(IERC20)77": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IMultiDEX)92": {
        "encoding": "inplace",
        "label": "contract IMultiDEX",
        "numberOfBytes": "20"
      }
    }
  }
}