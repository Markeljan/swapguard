{
  "address": "0x9636feB73C1f92D7524ba56B739bbd329fe74B24",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountB",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "inputAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "inputReserve",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "outputReserve",
          "type": "uint256"
        }
      ],
      "name": "getAmountOfTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokensInContract",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_liquidity",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenIn",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenOut",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokensSold",
          "type": "uint256"
        }
      ],
      "name": "swapTokenToToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenInfoMap",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
  "receipt": {
    "to": null,
    "from": "0x999FB21A651cFbB4059C5d0c2fA561E9A6354999",
    "contractAddress": "0x9636feB73C1f92D7524ba56B739bbd329fe74B24",
    "transactionIndex": 0,
    "gasUsed": "904688",
    "logsBloom": "0x
    "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a",
    "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x9636feB73C1f92D7524ba56B739bbd329fe74B24",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000999fb21a651cfbb4059c5d0c2fa561e9a6354999"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x00000000000000000000000098b8e9b5830f04fe3b8d56a2f8455e337037ba280000000000000000000000000000000000000000000000000000000000004231",
        "logIndex": 1,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x0000000000000000000000004f52e61907b0ed9f26b88f16b2510a4ca524d6d00000000000000000000000000000000000000000000000000000000000003099",
        "logIndex": 2,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x000000000000000000000000d2a1bb23eb350814a30dd6f9de78bb2c8fdd9f1d0000000000000000000000000000000000000000000000000000000000009cc6",
        "logIndex": 3,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x0000000000000000000000006892bdbbb14e1c9bd46bf31e7bac94d038fc82a6000000000000000000000000000000000000000000000000000000000000422d",
        "logIndex": 4,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 6679729,
        "transactionHash": "0xa80bbe9d37acc9cb77da17964942f215e82954c1c9397e8890165e86f7717215",
        "address": "0x1000000000000000000000000000000000000002",
        "topics": [
          "0xe7aa66356adbd5e839ef210626f6d8f6f72109c17fadf4c4f9ca82b315ae79b4"
        ],
        "data": "0x000000000000000000000000bd33bdff04c357f7fc019e72d0504c24cf4aa0100000000000000000000000000000000000000000000000000000000000008f11",
        "logIndex": 5,
        "blockHash": "0x2a78cf1c69c4ab98bd761b861c4a5f32b425cd7b5b805da916e944ecd53dd45a"
      }
    ],
    "blockNumber": 6679729,
    "cumulativeGasUsed": "904688",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f39236243dea4a834a5d6f1eb12637a4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputReserve\",\"type\":\"uint256\"}],\"name\":\"getAmountOfTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getTokensInContract\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokensSold\",\"type\":\"uint256\"}],\"name\":\"swapTokenToToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenInfoMap\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A multi-token decentralized exchange (DEX) contract.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"MultiDEX\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MultiDEX.sol\":\"MultiDEX\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/MultiDEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title MultiDEX\\n * @dev A multi-token decentralized exchange (DEX) contract.\\n */\\ncontract MultiDEX is Ownable {\\n    struct TokenInfo {\\n        address token;\\n        uint256 liquidity;\\n    }\\n    \\n    mapping(address => TokenInfo) public tokenInfoMap;\\n    address[] public supportedTokens;\\n    \\n    constructor() Ownable() {\\n    }\\n    \\n    function addSupportedToken(address _token) public onlyOwner {\\n        require(tokenInfoMap[_token].token == address(0), \\\"Token already supported\\\");\\n        supportedTokens.push(_token);\\n        tokenInfoMap[_token] = TokenInfo(_token, 0);\\n    }\\n    \\n    function getTokensInContract(address _token) public view returns (uint256) {\\n        return IERC20(_token).balanceOf(address(this));\\n    }\\n    \\n    function addLiquidity(address _tokenA, address _tokenB, uint256 _amountA, uint256 _amountB) public {\\n        require(tokenInfoMap[_tokenA].token != address(0) && tokenInfoMap[_tokenB].token != address(0), \\\"Tokens not supported\\\");\\n        \\n        TokenInfo storage tokenInfoA = tokenInfoMap[_tokenA];\\n        TokenInfo storage tokenInfoB = tokenInfoMap[_tokenB];\\n        \\n        uint256 liquidityA;\\n        uint256 liquidityB;\\n        uint256 reserveA = getTokensInContract(_tokenA);\\n        uint256 reserveB = getTokensInContract(_tokenB);\\n        IERC20 tokenA = IERC20(_tokenA);\\n        IERC20 tokenB = IERC20(_tokenB);\\n        \\n        if (reserveA == 0 || reserveB == 0) {\\n            tokenA.transferFrom(msg.sender, address(this), _amountA);\\n            tokenB.transferFrom(msg.sender, address(this), _amountB);\\n            liquidityA = _amountA;\\n            liquidityB = _amountB;\\n        }\\n        else {\\n            require(\\n                _amountA >= (_amountB * reserveA) / reserveB && _amountB >= (_amountA * reserveB) / reserveA,\\n                \\\"Amount of tokens sent is less than the minimum tokens required\\\"\\n            );\\n            tokenA.transferFrom(msg.sender, address(this), _amountA);\\n            tokenB.transferFrom(msg.sender, address(this), _amountB);\\n            unchecked {\\n                liquidityA = (tokenInfoA.liquidity * _amountA) / reserveA;\\n                liquidityB = (tokenInfoB.liquidity * _amountB) / reserveB;\\n            }\\n        }\\n        \\n        tokenInfoA.liquidity += liquidityA;\\n        tokenInfoB.liquidity += liquidityB;\\n    }\\n    \\n    function removeLiquidity(address _tokenA, address _tokenB, uint256 _liquidity) public {\\n        require(\\n            _liquidity > 0, \\\"Liquidity should be greater than zero\\\"\\n        );\\n        require(tokenInfoMap[_tokenA].token != address(0) && tokenInfoMap[_tokenB].token != address(0), \\\"Tokens not supported\\\");\\n        \\n        TokenInfo storage tokenInfoA = tokenInfoMap[_tokenA];\\n        TokenInfo storage tokenInfoB = tokenInfoMap[_tokenB];\\n        \\n        uint256 totalLiquidityA = tokenInfoA.liquidity;\\n        uint256 totalLiquidityB = tokenInfoB.liquidity;\\n        uint256 tokenAmountA = (getTokensInContract(_tokenA) * _liquidity) / totalLiquidityA;\\n        uint256 tokenAmountB = (getTokensInContract(_tokenB) * _liquidity) / totalLiquidityB;\\n        \\n        tokenInfoA.liquidity -= _liquidity;\\n        tokenInfoB.liquidity -= _liquidity;\\n        \\n        IERC20(_tokenA).transfer(msg.sender, tokenAmountA);\\n        IERC20(_tokenB).transfer(msg.sender, tokenAmountB);\\n    }\\n    \\n    function getAmountOfTokens(\\n        uint256 inputAmount,\\n        uint256 inputReserve,\\n        uint256 outputReserve\\n    )\\n    public pure returns (uint256) \\n    {\\n        require(inputReserve > 0 && outputReserve > 0, \\\"Invalid Reserves\\\");\\n        uint256 inputAmountWithFee = inputAmount;\\n        uint256 numerator = inputAmountWithFee * outputReserve;\\n        uint256 denominator = (inputReserve * 100) + inputAmountWithFee;\\n        unchecked {\\n            return numerator / denominator;\\n        }\\n    }\\n    \\n    function swapTokenToToken(address _tokenIn, address _tokenOut, uint256 _tokensSold) public {\\n        require(tokenInfoMap[_tokenIn].token != address(0) && tokenInfoMap[_tokenOut].token != address(0), \\\"Tokens not supported\\\");\\n        \\n        uint256 _reservedTokensIn = getTokensInContract(_tokenIn);\\n        uint256 _reservedTokensOut = getTokensInContract(_tokenOut);\\n        uint256 _tokensBought = getAmountOfTokens(\\n            _tokensSold, \\n            _reservedTokensIn, \\n            _reservedTokensOut\\n        );\\n        IERC20(_tokenIn).transferFrom(msg.sender, address(this), _tokensSold);\\n        IERC20(_tokenOut).transfer(msg.sender, _tokensBought);\\n    }\\n}\\n\",\"keccak256\":\"0x1f007720d61d885e5ecd750858ab42d2798cc857113ccde94c09a458f2ace3c7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610ef38061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637386479e116100715780637386479e146101565780638da5cb5b14610169578063c62556261461018e578063cf6c62ea146101a1578063d752fab2146101b4578063f2fde38b146101c757600080fd5b806313712c9f146100ae57806369848c2f146100c35780636d69fcaf1461011a5780636eb0314f1461012d578063715018a61461014e575b600080fd5b6100c16100bc366004610cc0565b6101da565b005b6100f66100d1366004610cfc565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100c1610128366004610cfc565b610359565b61014061013b366004610cfc565b61044a565b604051908152602001610111565b6100c16104bb565b610140610164366004610d1e565b6104cf565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610111565b61017661019c366004610d4a565b610563565b6100c16101af366004610d63565b61058d565b6100c16101c2366004610cc0565b610931565b6100c16101d5366004610cfc565b610b81565b6001600160a01b03838116600090815260016020526040902054161580159061021c57506001600160a01b038281166000908152600160205260409020541615155b6102415760405162461bcd60e51b815260040161023890610da5565b60405180910390fd5b600061024c8461044a565b905060006102598461044a565b905060006102688484846104cf565b6040516323b872dd60e01b81529091506001600160a01b038716906323b872dd9061029b90339030908990600401610dd3565b6020604051808303816000875af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610df7565b5060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0386169063a9059cbb906044016020604051808303816000875af115801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190610df7565b50505050505050565b610361610bfa565b6001600160a01b0381811660009081526001602052604090205416156103c95760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606401610238565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03199081166001600160a01b039485169081179092556040805180820182528381526000602080830182815295825286905291909120905181549092169190941617835551910155565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190610e19565b92915050565b6104c3610bfa565b6104cd6000610c54565b565b600080831180156104e05750600082115b61051f5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420526573657276657360801b6044820152606401610238565b83600061052c8483610e48565b905060008261053c876064610e48565b6105469190610e5f565b905080828161055757610557610e72565b04979650505050505050565b6002818154811061057357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0384811660009081526001602052604090205416158015906105cf57506001600160a01b038381166000908152600160205260409020541615155b6105eb5760405162461bcd60e51b815260040161023890610da5565b6001600160a01b03808516600090815260016020526040808220928616825281209080806106188961044a565b905060006106258961044a565b90508989831580610634575082155b1561072c576040516323b872dd60e01b81526001600160a01b038316906323b872dd9061066990339030908f90600401610dd3565b6020604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190610df7565b506040516323b872dd60e01b81526001600160a01b038216906323b872dd906106dd90339030908e90600401610dd3565b6020604051808303816000875af11580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610df7565b508995508894506108ef565b82610737858b610e48565b6107419190610e88565b8a10158015610764575083610756848c610e48565b6107609190610e88565b8910155b6107d65760405162461bcd60e51b815260206004820152603e60248201527f416d6f756e74206f6620746f6b656e732073656e74206973206c65737320746860448201527f616e20746865206d696e696d756d20746f6b656e7320726571756972656400006064820152608401610238565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061080690339030908f90600401610dd3565b6020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610df7565b506040516323b872dd60e01b81526001600160a01b038216906323b872dd9061087a90339030908e90600401610dd3565b6020604051808303816000875af1158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd9190610df7565b50838a896001015402816108d3576108d3610e72565b0495508289886001015402816108eb576108eb610e72565b0494505b858860010160008282546109039190610e5f565b925050819055508487600101600082825461091e9190610e5f565b9091555050505050505050505050505050565b6000811161098f5760405162461bcd60e51b815260206004820152602560248201527f4c69717569646974792073686f756c642062652067726561746572207468616e604482015264207a65726f60d81b6064820152608401610238565b6001600160a01b0383811660009081526001602052604090205416158015906109d157506001600160a01b038281166000908152600160205260409020541615155b6109ed5760405162461bcd60e51b815260040161023890610da5565b6001600160a01b03808416600090815260016020819052604080832093861683528220838201549181015490928286610a258a61044a565b610a2f9190610e48565b610a399190610e88565b905060008287610a488a61044a565b610a529190610e48565b610a5c9190610e88565b905086866001016000828254610a729190610eaa565b9250508190555086856001016000828254610a8d9190610eaa565b909155505060405163a9059cbb60e01b8152336004820152602481018390526001600160a01b038a169063a9059cbb906044016020604051808303816000875af1158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190610df7565b5060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0389169063a9059cbb906044016020604051808303816000875af1158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190610df7565b50505050505050505050565b610b89610bfa565b6001600160a01b038116610bee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610238565b610bf781610c54565b50565b6000546001600160a01b031633146104cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610238565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610cbb57600080fd5b919050565b600080600060608486031215610cd557600080fd5b610cde84610ca4565b9250610cec60208501610ca4565b9150604084013590509250925092565b600060208284031215610d0e57600080fd5b610d1782610ca4565b9392505050565b600080600060608486031215610d3357600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d5c57600080fd5b5035919050565b60008060008060808587031215610d7957600080fd5b610d8285610ca4565b9350610d9060208601610ca4565b93969395505050506040820135916060013590565b602080825260149082015273151bdad95b9cc81b9bdd081cdd5c1c1bdc9d195960621b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610e0957600080fd5b81518015158114610d1757600080fd5b600060208284031215610e2b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104b5576104b5610e32565b808201808211156104b5576104b5610e32565b634e487b7160e01b600052601260045260246000fd5b600082610ea557634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104b5576104b5610e3256fea26469706673582212203dd6ef0f987e03bbe7789cbda396228431df3a5329750bda25718864d2b0422564736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80637386479e116100715780637386479e146101565780638da5cb5b14610169578063c62556261461018e578063cf6c62ea146101a1578063d752fab2146101b4578063f2fde38b146101c757600080fd5b806313712c9f146100ae57806369848c2f146100c35780636d69fcaf1461011a5780636eb0314f1461012d578063715018a61461014e575b600080fd5b6100c16100bc366004610cc0565b6101da565b005b6100f66100d1366004610cfc565b600160208190526000918252604090912080549101546001600160a01b039091169082565b604080516001600160a01b0390931683526020830191909152015b60405180910390f35b6100c1610128366004610cfc565b610359565b61014061013b366004610cfc565b61044a565b604051908152602001610111565b6100c16104bb565b610140610164366004610d1e565b6104cf565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610111565b61017661019c366004610d4a565b610563565b6100c16101af366004610d63565b61058d565b6100c16101c2366004610cc0565b610931565b6100c16101d5366004610cfc565b610b81565b6001600160a01b03838116600090815260016020526040902054161580159061021c57506001600160a01b038281166000908152600160205260409020541615155b6102415760405162461bcd60e51b815260040161023890610da5565b60405180910390fd5b600061024c8461044a565b905060006102598461044a565b905060006102688484846104cf565b6040516323b872dd60e01b81529091506001600160a01b038716906323b872dd9061029b90339030908990600401610dd3565b6020604051808303816000875af11580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190610df7565b5060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0386169063a9059cbb906044016020604051808303816000875af115801561032c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103509190610df7565b50505050505050565b610361610bfa565b6001600160a01b0381811660009081526001602052604090205416156103c95760405162461bcd60e51b815260206004820152601760248201527f546f6b656e20616c726561647920737570706f727465640000000000000000006044820152606401610238565b6002805460018082019092557f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180546001600160a01b03199081166001600160a01b039485169081179092556040805180820182528381526000602080830182815295825286905291909120905181549092169190941617835551910155565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190610e19565b92915050565b6104c3610bfa565b6104cd6000610c54565b565b600080831180156104e05750600082115b61051f5760405162461bcd60e51b815260206004820152601060248201526f496e76616c696420526573657276657360801b6044820152606401610238565b83600061052c8483610e48565b905060008261053c876064610e48565b6105469190610e5f565b905080828161055757610557610e72565b04979650505050505050565b6002818154811061057357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b0384811660009081526001602052604090205416158015906105cf57506001600160a01b038381166000908152600160205260409020541615155b6105eb5760405162461bcd60e51b815260040161023890610da5565b6001600160a01b03808516600090815260016020526040808220928616825281209080806106188961044a565b905060006106258961044a565b90508989831580610634575082155b1561072c576040516323b872dd60e01b81526001600160a01b038316906323b872dd9061066990339030908f90600401610dd3565b6020604051808303816000875af1158015610688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ac9190610df7565b506040516323b872dd60e01b81526001600160a01b038216906323b872dd906106dd90339030908e90600401610dd3565b6020604051808303816000875af11580156106fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107209190610df7565b508995508894506108ef565b82610737858b610e48565b6107419190610e88565b8a10158015610764575083610756848c610e48565b6107609190610e88565b8910155b6107d65760405162461bcd60e51b815260206004820152603e60248201527f416d6f756e74206f6620746f6b656e732073656e74206973206c65737320746860448201527f616e20746865206d696e696d756d20746f6b656e7320726571756972656400006064820152608401610238565b6040516323b872dd60e01b81526001600160a01b038316906323b872dd9061080690339030908f90600401610dd3565b6020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610df7565b506040516323b872dd60e01b81526001600160a01b038216906323b872dd9061087a90339030908e90600401610dd3565b6020604051808303816000875af1158015610899573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108bd9190610df7565b50838a896001015402816108d3576108d3610e72565b0495508289886001015402816108eb576108eb610e72565b0494505b858860010160008282546109039190610e5f565b925050819055508487600101600082825461091e9190610e5f565b9091555050505050505050505050505050565b6000811161098f5760405162461bcd60e51b815260206004820152602560248201527f4c69717569646974792073686f756c642062652067726561746572207468616e604482015264207a65726f60d81b6064820152608401610238565b6001600160a01b0383811660009081526001602052604090205416158015906109d157506001600160a01b038281166000908152600160205260409020541615155b6109ed5760405162461bcd60e51b815260040161023890610da5565b6001600160a01b03808416600090815260016020819052604080832093861683528220838201549181015490928286610a258a61044a565b610a2f9190610e48565b610a399190610e88565b905060008287610a488a61044a565b610a529190610e48565b610a5c9190610e88565b905086866001016000828254610a729190610eaa565b9250508190555086856001016000828254610a8d9190610eaa565b909155505060405163a9059cbb60e01b8152336004820152602481018390526001600160a01b038a169063a9059cbb906044016020604051808303816000875af1158015610adf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b039190610df7565b5060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0389169063a9059cbb906044016020604051808303816000875af1158015610b51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b759190610df7565b50505050505050505050565b610b89610bfa565b6001600160a01b038116610bee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610238565b610bf781610c54565b50565b6000546001600160a01b031633146104cd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610238565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610cbb57600080fd5b919050565b600080600060608486031215610cd557600080fd5b610cde84610ca4565b9250610cec60208501610ca4565b9150604084013590509250925092565b600060208284031215610d0e57600080fd5b610d1782610ca4565b9392505050565b600080600060608486031215610d3357600080fd5b505081359360208301359350604090920135919050565b600060208284031215610d5c57600080fd5b5035919050565b60008060008060808587031215610d7957600080fd5b610d8285610ca4565b9350610d9060208601610ca4565b93969395505050506040820135916060013590565b602080825260149082015273151bdad95b9cc81b9bdd081cdd5c1c1bdc9d195960621b604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610e0957600080fd5b81518015158114610d1757600080fd5b600060208284031215610e2b57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176104b5576104b5610e32565b808201808211156104b5576104b5610e32565b634e487b7160e01b600052601260045260246000fd5b600082610ea557634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104b5576104b5610e3256fea26469706673582212203dd6ef0f987e03bbe7789cbda396228431df3a5329750bda25718864d2b0422564736f6c63430008110033",
  "devdoc": {
    "details": "A multi-token decentralized exchange (DEX) contract.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MultiDEX",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/MultiDEX.sol:MultiDEX",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 229,
        "contract": "contracts/MultiDEX.sol:MultiDEX",
        "label": "tokenInfoMap",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_struct(TokenInfo)224_storage)"
      },
      {
        "astId": 232,
        "contract": "contracts/MultiDEX.sol:MultiDEX",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(TokenInfo)224_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct MultiDEX.TokenInfo)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenInfo)224_storage"
      },
      "t_struct(TokenInfo)224_storage": {
        "encoding": "inplace",
        "label": "struct MultiDEX.TokenInfo",
        "members": [
          {
            "astId": 221,
            "contract": "contracts/MultiDEX.sol:MultiDEX",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 223,
            "contract": "contracts/MultiDEX.sol:MultiDEX",
            "label": "liquidity",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}